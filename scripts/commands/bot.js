const axios = require('axios');
const fs = require('fs'); 
const path = require('path');

module.exports = {
  config: {
    name: "bot",
    version: "1.0.0",
    permission: 0,
    credits: "nayan",
    description: "talk with bot",
    prefix: 'auto',
    category: "talk",
    usages: "hi",
    cooldowns: 5,
  },

  handleReply: async function ({ api, event }) {
    try {

      const apiData = await axios.get('https://raw.githubusercontent.com/MOHAMMAD-NAYAN/Nayan/main/api.json');
      const apiUrl = apiData.data.sim;
      const kl = await axios.get(`https://raw.githubusercontent.com/MOHAMMAD-NAYAN/Nayan/main/api.json`);
      const apiUrl2 = kl.data.api2;
      const response = await axios.get(`${apiUrl}/sim?type=ask&ask=${encodeURIComponent(event.body)}`);
      console.log(response.data);
      const result = response.data.data.msg;

      const textStyles = loadTextStyles();
      const userStyle = textStyles[event.threadID]?.style; 

      const fontResponse = await axios.get(`${apiUrl2}/bold?text=${result}&type=${userStyle}`);
      const text = fontResponse.data.data.bolded;

      api.sendMessage(text, event.threadID, (error, info) => {
        if (error) {
          console.error('Error replying to user:', error);
          return api.sendMessage('An error occurred while processing your request. Please try again later.', event.threadID, event.messageID);
        }
        global.client.handleReply.push({
          type: 'reply',
          name: this.config.name,
          messageID: info.messageID,
          author: event.senderID,
          head: event.body
        });
      }, event.messageID);

    } catch (error) {
      console.error('Error in handleReply:', error);
      api.sendMessage('An error occurred while processing your request. Please try again later.', event.threadID, event.messageID);
    }
  },

  start: async function ({ nayan, events, args, Users }) {
    try {
      const msg = args.join(" ");
      const apiData = await axios.get('https://raw.githubusercontent.com/MOHAMMAD-NAYAN/Nayan/main/api.json');
      const apiUrl = apiData.data.sim;


      if (!msg) {
        const greetings = [
          "тФА ржЖрж╣ рж╢рзБржирж╛ ржЖржорж╛рж░ рждрзЛржорж╛рж░ ржЕрж▓рж┐рждрзЗ ржЧрж▓рж┐рждрзЗ ржЙржорзНржорж╛рж╣...!!ЁЯШЗЁЯШШ",
          "тФА ржХрж┐ ржЧрзЛ рж╕рзЛржирж╛ ржЖржорж╛ржХрзЗ ржбрж╛ржХржЫ ржХрзЗржирзЛ...!!ЁЯШЩЁЯШБ",
          "тФА ржмрж╛рж░ ржмрж╛рж░ ржЖржорж╛ржХрзЗ ржбрж╛ржХрж╕ ржХрзЗржи...!!ЁЯШб",
          "тФА ржЖрж╣ рж╢рзЛржирж╛ ржЖржорж╛рж░ ржЖржорж╛ржХрзЗ ржПрждрзЛ ржбрж╛ржХрзНрждрж╛ржЫрзЛ ржХрзЗржирзЛ ржЖрж╕рзЛ ржмрзБржХрзЗ ржЖрж╢рзЛ...!!ЁЯе▒",
          "тФА рж╣рзБржо ржЬрж╛ржи рждрзЛржорж╛рж░ ржЕржЗржЦрж╛ржирзЗ ржЙржорзНржоржорж╛рж╣...!!ЁЯШ╖ЁЯШШ",
          "тФА ржЖрж╕рж╕рж╛рж▓рж╛ржорзБ ржЖрж▓рж╛ржЗржХрзБржо ржмрж▓рзЗржи ржЖржкржирж╛рж░ ржЬржирзНржп ржХрж┐ ржХрж░рждрзЗ ржкрж╛рж░рж┐...!!ЁЯШБЁЯШЩ",
          "тФА ржЖржорж╛ржХрзЗ ржПрждрзЛ ржирж╛ ржбрзЗржХрзЗ ржмрж╕ RANA ржХрзЗ ржПржХржЯрж╛ ржЧржл ржжрзЗ ...!!ЁЯШЩЁЯШБ",
          "тФА hanga korba...!!ЁЯе▓ЁЯе▓",
          "тФА bal falaba...!!ЁЯЩВ","тФА рж╣рзБржо ржмрж╛ржмрзБ ржкрж░рзЗ ржХржерж╛ рж╣ржмрзЗ ржПржЦржи рж░рж╛ржЦрж┐...!!ЁЯШШЁЯлг","тФА ржПржЗ рждрзЛ ржмрж╛ржмрзБ ржЖржорж┐ ржПржЦрж╛ржирзЗ рж╣рж╛рж░рж┐рзЯрзЗ ржЬрж╛ржЗржирж┐ рждрзЛ рж╕рзЛржирж╛...!!ЁЯЩИЁЯШ╜","тФА ржмрж╛ржмрзБ ржЖржорж╛ржХрзЗ ржбрж╛ржХрж▓рзЗ  ржпрзЗ ржХрж┐ржЫрзБ ржмрж▓ржмрж╛ ржмрж╛ржмрзБ...!!ЁЯдНЁЯдн","тФА ржирж╛рзНржБржЯрзНржБржХрзНржБ ржХрзНржБржорзНржБ ржХрзНржБрж░рзНржБ ржкрж┐рзНржБржУрзНржБ...!!ЁЯлгЁЯЩИ","тФА ржнрзНржБржирзНржбрж╛рзНржБржорзАрзНржБ ржЫрж╛рзНржБрж░рзЛрзНржБ ржкрж┐рзНржБржУрзНржБ...!!ЁЯР╕ЁЯШТ","тФА ржЕржнрж┐рзп ржХржо ржХрж░рзЛ ржкрж┐ржУ...!!ЁЯЩВЁЯШ╛","тФА ржорж╛рзНржБржирзБрзНржБрж╖рзНржБ ржХрзНржБрж░рзНржБрждрзЗрзНржБ ржкрж╛рзНржБрж░рзНржБрж▓рж╛рзНржБржорзНржБ ржирж╛рзНржБ рждрзЛрзНржБржжрзЗрзНржБрж░рзНржБ....!!ЁЯШТЁЯШ╝","тФА рждрзБржорж┐ рждрзЛ ржжрзЗржЦрж┐ ржЕржирзЗржХ ржлрж╛ржЬрж┐рж▓ рж╣рзЯрзЗ ржЧрзЗржЫрзЛ...!!ЁЯШ╛ЁЯШ╛","тФА ржЬрж╛ржи ржПржХржЯрж╛ Ummah ржжрж╛ржУ ржирж╛...!!ЁЯлгЁЯЩИ","тФАржЪрзБржорзБрж░ ржЕржнрж╛ржмрзЗ ржарзЛржБржЯ ржлрзЗржЯрзЗ ржпрж╛ржЪрзНржЫрзЗ ЁЯе║ ржбрзБ YOU ржЪрзБржорзНржорж╛ ME...!!ЁЯе╣ЁЯе╣","тФАржПрждрзЛ Bot Bot ржирж╛ ржХрж░рзЗ ржПржХ ржмрж╛рж░рзЗ ржмрж▓рзЛ ржЖржорж┐ рждрзЛржорж╛ржпрж╝ ржнрж╛рж▓рзЛржмрж╛рж╕рж┐...!!ЁЯЩИЁЯдй","тФАржПржБржЗржБ ржирзЗржБржУржБ ЁЯл┤ ржЪрж╛ржБржмрж┐ржБ ЁЯФС рждрж╛ржБрж▓рж╛ржБ ржЦрзБржБрж▓рзЗржБ ЁЯУй ржЗржБржБржиржБржмржБржХрзНрж╕ржБ ржЧрзБржБрждрж╛ржБ ржжрж╛ржБржУржБ...!!ЁЯШЭЁЯЦд","тФАржХрзЛржи рж╕рж╛рж╣рзНржпрж╕рзЗ рждрзБржорж┐ ржЖржорж╛ржХрзЗ Bot ржмрж▓рзЛ  рждрзБржорж┐ ржПржХржЯрж╛ рж▓рзБржЪрзНржЪрж╛...!!ЁЯл╡ЁЯЩВ","тФАOle ржмрж╛ржмрзБ ржЯрж╛ Le ржЖржорж╛рж░__ЁЯШШ ржХрж┐ рж╣рзЯрзЗржЫрзЗ рж╕рзЛржирж╛ Tomar ЁЯШЧ ржбрж╛ржХрж▓рзЗ ржпрзЗ...!!ЁЯлгЁЯТн","тФАржПржЗ ржирж╛ржУ ЁЯл┤рждрзЛржорж╛рж░ ЁЯл╡ ржжрж╛ржд ЁЯж╖ ржорж╛ржЯрж┐рждрзЗ ржкрзЬрзЗ ржЫрж┐рж▓рзЛ...!!ЁЯЩВЁЯл╡","тФАEGO ржЫрж╛рж░рзЛ ogo ржмрж▓рзЗ ржбрж╛ржХрзЛ ржЖржорж┐ Kigo ржмрж▓рзЗ рж╕рж╛рзЬрж╛ ржжрж┐ржмрзЛ...!!ЁЯл╡ЁЯЩВ","тФАEX ржЖржорж╛рзЯ ржПржХ ЁЯеД ржЪрж╛ржоржЪ ржнрж╛рж▓рзЛржмрж╛рж╕рж╛ ржжрж┐рж╕рж┐рж▓рзЛ...!!ЁЯЩВЁЯТн","тФА ржбрзБ YOU ржкрж┐рж░рж┐ржд  ME...!!ЁЯЩВЁЯЩИ","тАФ Tomar ржХрзЗрзНржБржЙрзНржБ Nai ржорж╛рзГрзНржБржирзЗрзГрзНржБржЗрзГрзНржБ рждрзБрзГрзНржБржорж┐рзГрзНржБ ржЖрзГрзНржБржорж╛рзГрзНржБрж░рзГрзНржБ...!!ЁЯл╢ЁЯЩИ","тАФржкрж┐ржБржУржБ ЁЯе║ рждрзЛржБржорж╛ржБрж░ рж╢рж╛ржБрзЬрж┐ржБрждрзЗржБ рж╕ржБрж░рзНржжрж┐ржБ ржорзБржБржЫржБрждрзЗржБ ржЪрж╛ржБржЗржБ...!!ЁЯдз","тФАржЫрзЛрзНржБржЯрзНржБржмрзЗрзНржБрж▓рж╛рзНржБржпрж╝ ржЬрзЛрзНржБржирж╛рзНржБржХрж┐ ржкрзЛрзНржБржХрж╛рзНржБ ржзрзНржБрж░рзЗрзНржБ рждрж╛рзНржБрж░рзНржБ ржкрзБрз│ржХрж┐рж░ ржЖрж▓рзЛ ржХрзЗржбрж╝рзЗрзНржБ ржирж┐рзНржБржЫрж┐рзНржБрж▓рж╛ржо ржмрзНржБрж▓рзЗрзНржБржЗрзНржБ ржЖрзНржБржЬ рж░рж╛рзГржБржирж╛рзГржБ ржмрзНржБрж╕рзЗрзНржБрж░рзНржБ ржЬрзАрзНржБржмрзНржБржирзЗрзНржБ ржПрзНржБрждрзЛрзНржБ ржЕрзНржБржирзНржзрзНржБржХрж╛рзНржБрж░рзНржБ...!!ЁЯШМЁЯе╣","тАФ ржХ..ржЖржорж┐ рждрзЛрж░ЁЯл╡ ржХрзА рж▓рж╛ржЧрж┐...!!ЁЯФкЁЯШ╛","тАФ ржкрзБржБрж░рж╛рзГрзНржБрждржБржирзГрзНржБ ржнрж╛рзГрзНржБржЩрж╛ржБ ржЪрзВрзГрзНржБрзЬрж╛ржБ Bandhobi ржерж╛рзГрзНржБржХржБрж▓рзЗрзГрзН RANA ржмрзНржБрж╕рзНржБ рж░рзЗрзНржБ ржжрж┐рзНржБрзЯрж╛рзНржБ ржжрзЗрзНржБржирзНржБ...!!ЁЯШБЁЯдн","тФАржЧ'рж░ржорзЗрж░ ржпрзЗ ржнрж┐ржЙ рждрзЛрж░рзЗ ЁЯл╡ l love U...!!ЁЯШ╝ЁЯЩИ","тФАржЕржБржЗржБ ржмржБрж▓ржБ ржнрж╛ржБрж▓ржБржмрж╛ржБрж╕рж┐ржБ ржиржБржЗржБ рждрзЛржБ ржЧрзБржБрж▓рж┐ржБ  ржХржБрж░ржБржорзБржБ...!!ЁЯШ╛ЁЯШ╛","тФАржЦрж╛рзНржБржбрж╝рж╛рзНржБржУрзНржБ рждрзЛрзНржБржорж╛рзНржБрж░рзНржБЁЯл╡тЯ╢═Я═Я═Я═Я═Ю╠▓тГЭржЖржорзНржорзБрж░рзЗ ..ржХрзНржБржЗрзНржБрждрж╛рзНржБржЫрж┐рзНржБ ржлрзЗрзНржБрж╕рзНржБржмрзБржБржХрзЗрзНржБ ржПрзНржБрж╕рзЗрзНржБ  ржЗрзНржБржЯрж┐рзНржБрж╕рзНржБ ржкрж┐рзНржБржЯрж┐рзНржБрж╕рзНржБ ржХрзНржБрж░рзЛрзНржБ...!!ЁЯе┤ЁЯШ╣","тФА ржзрж░рзЛ ржЖржорж┐ рждрзЛржорж╛рж░ BF ЁЯСА ржзрж░рзЗржЫрзЛ ржпржЦржи ржЖрж░ ржЫрж╛рзЬрж╛рж░ ржжрж░ржХрж╛рж░ ржирж╛ржЗ...!!ЁЯе║ЁЯМЭ","тФАржХрж┐рзНржБрж░рзЗрзНржБ рждрж╛рзНржБржХрж╛рзНржБржЗрзНржБрзЯрж╛рзНржБ ржЖрзНржБржЫрзЛрзНржБржЫрзНржБ ржХрзЗрзНржБржирзНржБ ЁЯСА ржмрзНржБржЙрзНржБ ржмрж╛рзНржБржирж╛рзНржБржЗрзНржБржмрж┐рзНржБ ржирж╛рзНржБржХрж┐рзНржБ...!!ЁЯСКЁЯЩД"," тФА ржХрж┐рзНржБрж░рзЗрзНржБ рждрж╛рзНржБржХрж╛рзНржБржЗрзНржБрзЯрж╛рзНржБ ржЖрзНржБржЫрзЛрзНржБржЫрзНржБ ржХрзЗрзНржБржирзНржБ ЁЯСА ржЬрж╛рзНржБржорж╛рзНржБржЗрзНржБ ржмрж╛рзНржБржирж╛рзНржБржЗрзНржБржмрж┐рзНржБ ржирж╛рзНржБржХрж┐рзНржБ...!!ЁЯСКЁЯЩД","тФАржЬрж╛рзНржБржирзНржБ рждрзЛрзНржБржорж╛рзНржБрж░рзНржБ ржкрзНрж░рзЗрзНржБржорзЗрзНржБ ржкрзНржБржбрж╝рзЗрзНржБ ржЧрзЗрзНржБржЫрж┐рзНржБ...!!ЁЯе║ЁЯЩИ","тФАржЫрзНржпрж╛рзНржБржХрж╛рзНржБ ржЦрзЗрзНржБрждрзЗрзНржБ ржЪрж╛рзНржБржУрзНржБ ржЖрзНржБржорж╛рзНржБржХрзЗрзНржБ ржкрзНржБржЯрж╛рзНржБржУрзНржБ...!!ЁЯднЁЯл░","тФА ржУрзГрзНржБрж▓рзЗрзГрзНржБ ржУрзГрзНржБрж▓рзЗрзГрзНржБ...!! ЁЯТЛЁЯдг","тФА ржбрзБ YOU ржкрж┐рж░рж┐ржд  ME...!!ЁЯЩВЁЯЩИ","тАФ рж░рж╛рзГржБржирж╛рзГржБ ржмрзНржБрж╕рзНтАМржБ ржЧрж╛рзНржБрзЬрж┐рзНржБ ржШрзБрзНржБрж░рж╛рзНржБржУрзНржБ ржПрзНржБржЗрзНржБ рж░рж╛рзНржБрж╕рзНрждрж╛ржБ ржЖрзНржБржорж╛рзНржБржжрзЗрзНржБрж░рзНржБ ржЬрзНржБржирзНржпржБ ржирж╛рзНржБрж╣рзНржБ...!!ЁЯР╕ЁЯТн","тАФ рж░рж╛рзГржБржирж╛рзГржБ ржмрзНржБрж╕рзНтАМржБ ржЧрж╛рзНржБрзЬрж┐рзНржБ ржШрзБрзНржБрж░рж╛рзНржБржУрзНржБ ржПрзНржБржЗрзНржБ рж░рж╛рзНржБрж╕рзНрждрж╛ржБ ржЖрзНржБржорж╛рзНржБржжрзЗрзНржБрж░рзНржБ ржЬрзНржБржирзНржпржБ ржирж╛рзНржБрж╣рзНржБ...!!ЁЯР╕ЁЯТн","тАФ рж╣рзНржБржЗрзНржБржЫрзЗрзНржБ ржврзНржБржВ ржмрж╛рзНржБржж ржжрж╛рзНржБржУрзНржБ ржЖрзНржБрж╕рзЛрзНржБ ржкрзНрж░рзЗрзНржБржорзНржБ ржХрзНржБрж░рж┐рзНржБ...!!ЁЯШКЁЯй╡","тАФ ржнрж╛рзНрзГржБржЗрзНржБржпрж╝рж╛рзНрзГржБ ржкрж╛рзНрзГржБржмрзНржБржирж╛рзНрзГржБ рж╕рзЛрзНрзГржБржЬрж╛рзНрзГржБ ржУрзНржБржЗрзНржБ ржжрж┐рзНржБржХрзЗрзНржБ...!!ЁЯЩВ","тАФ рждрзБрзНржБржорж┐рзНржБ ржпрзЗрзНржБ ржжрзБрзНржБржЗрзНржБ ржмрж╛рзНржБржЪрзНржЪрж╛рзНржБрж░ ржорж╛рзНржБ рждрж╛рзНржБ ржЖрзНржБржорж┐рзНржБ ржЬрж╛рзНржБржирж┐рзНржБ...!!ЁЯШТЁЯШТ","тАФ ржнрж╛рзНржБрж▓рзЛрзНржБржмрж╛рзНржБрж╕рж╛рзНржБ рж╕рзБрзНржБржирзНржжрзНржБрж░рзНржБ ржпрзНржБржжрж┐рзНржБ рж░рж╛рзГржБржирж╛рзГржБ ржмрзНржБрж╕рзЗрзНржБрж░рзНржБ рж╕рж╛рзНржБржерзЗрзНржБ ржХрзНржБрж░рзЛрзНржБ...!!ЁЯШБЁЯдЧ","тАФ рж╕рзБржБржирзНржжрзНржБрж░рзНржБ ржХрзНржБржерж╛рзНрзГржБ ржХрзНржБржЗрзНржБржЫрзЛрзНрзГржБрж╕рзНржБ ржЖрзНржБржЗрзНржБ ржмрзБржБржХрзЗрзНржБ ржЖрзНржБржЗрзНржБ тАЩ...!!ЁЯЩВЁЯШБ","тАФ. ржЪрзБржорзНржорж╛ ржжрзЗ - ржжрзЛрзЯрж╛ ржХрж░ржорзБ...!!ЁЯе╣ЁЯл╢","тАФржЪрзНржБрж▓рзЛрзНржБ ржкрж┐рзНржБржУрзНржБ ржмрж┐рзНржБржпрж╝рзЗрзНржБ ржХрзНржБрж░рзЗрзНржБ ржлрзЗрзНржБрж▓рж┐рзНржБ...!!ЁЯжЛЁЯЩИ","тПЬ тЭе═Ь═бЁЦагъЩ░┘Ь┘Ь┘Ь┘Ь┘Ь┘Ь┘Ь┘Ь┘Ь╠Л╠А╠Л╠А╠Л╠А╠Л╠А╠Л╠А╠Л╠АтЪА┘А┘░┘Ц┘Ц┘Ц┘Ц┘Ц┘Ь█м┘А┘░┘░┘Ц┘Ц┘Ц┘Ц┘Ь█м┘А┘░┘░┘░┘Ц┘Ц┘Ц┘Ь█м┘А┘░┘░┘░┘░┘Ц┘Ц┘Ь█м┘А┘░┘░┘░┘░┘░┘Ц┘Ь█м ЁЭЧФЁЭШАЁЭШАЁЭЧоЁЭЧ╣ЁЭЧоЁЭЧ║ЁЭШВЁЭЧоЁЭЧ╣ЁЭЧоЁЭЧ╢ЁЭЧ╕ЁЭШВЁЭЧ║┘А┘░┘Ц┘Ц┘Ц┘Ц┘Ц┘Ь█м┘А┘░┘░┘Ц┘Ц┘Ц┘Ц┘Ь█м┘А┘░┘░┘░┘Ц┘Ц┘Ц┘Ь█м┘А┘░┘░┘░┘░┘Ц┘Ц┘Ь█м┘А┘░┘░┘░┘░┘░┘Ц┘Ь█мтБЬ┘Ь┘Ь┘Ь┘Ь┘Ь┘Ь┘Ь┘Ь┘Ь═Ь═бтЭеъЩ░тПЬ","тАФ рждрзБрзГржБржорж╛рзНржБржЧрзЛрзНржБ ржЬрж╛рзНржБржорж╛рзНржБржЗрзНржБ рж▓рж╛рзНржБржЧрж┐рзНржБ ржУрзНржБржХрзЗрзНржБ ...!!ЁЯЩИЁЯлб","тАФ рж╣рзБрзНржБржорзБрзНржБржирзНржжрж┐рзНржБ ржХрзНржБрзЯрзНржБ ржХрж┐рзНржБ рж░рзЗрзНржБ...!!ЁЯл╡ЁЯШ╣","тАФ ржЖрзНржБржорж╛рзНржБрж░рзНржБ ЁЭРНЁЭРЮЁЭР▒ЁЭРн target рждрзБрзНржБржЗрзНржБ...!!ЁЯл╡ЁЯе╡","тАФ ржЖрзГрзНржБржЗрзГрзНржБрждрзЗрзГрзНржБ ржирзГрзНржБржжрж┐рзГрзНржБ ржпрж╛рзГрзНржБржЗрзГрзНржБрждрзЗрзГрзНржБ ржЦрж╛рзГрзНржБрж▓рзГрзНржБ ржорзБрзГрзНржБржЧрзЛрзГрзНржБ ржмрж╛рзГрзНржБрзЬрж┐рзГрзНржБ ржмрзГрзНржБржБрж░рж┐рзГрзНржБрж╢рж╛рзГрзНржБрж▓рзГрзНржБ...!!ЁЯЩВЁЯдЭ","тАФ ржПржЗ ржирзЗржУ рж╕рж╛ржмрж╛ржи__(ЁЯз╝) ржкрж╛ ржкрж┐ржЫрж▓рзЗ ржЖржорж╛рж░ ржкрзНрж░рзЗржорзЗ ржкрзЬрзЗ ржпрж╛ржУ...тШ║я╕ПЁЯл╢","тАФ ржмрзБржБржХрзНржБ ржЪрж┐рзНржБржирзНржБ ржЪрж┐рзНржБржирзНржБ ржХрзНржБрж░рзНржБржЫрзЗрзНржБ рж╣рж╛рзНржБрзЯрзНржБ ржорзНржБржирзНржБ рждрзЛрзНржБржорж╛рзНржБрзЯрзНржБ ржХрзНржБржорзБрзНржБ ржирж╛рзНржБ...!!ЁЯЩИЁЯЩК","тАФ ржХрж╛рзНржБржирзЗрзНржБрж░рзНржБ ржирж┐рзНржБржЪрзЗрзНржБ ржПрзНржБржорзНржБржирзНржБ ржерж╛рзНржБржкрзНржкрзНржБржбрж╝рзНржБ ржжрж┐ржБржорзБрзНржБтЛЖтГЭЁЯСЛЁЭДЮржмрж┐рзНржБржЯрж┐рзНржБржнрж┐рзНржБрж░рзНржБ ржорзНржБрждрзНржБ ржЭрж┐рзНржБрж░рзНржБ ржЭрж┐рзНржБрж░рзНржБ ржХрзНржБрж░рзНржБржмрж┐рзН...!!ЁЯл╡ЁЯШ╣","тАФ рждрж╛рзНржБржХрж╛рзНржБрзЯрзНржБ ржЖрзНржБржЫрзЛрзНржБрж╕рзНржБ ржХрзЗрзНржБржирзН...!!ЁЯл╡ЁЯШ╣"
        ];
        const name = await Users.getNameUser(events.senderID);
        const rand = greetings[Math.floor(Math.random() * greetings.length)];
        return nayan.reply({
          body: `${name}, ${rand}`,
          mentions: [{ tag: name, id: events.senderID }]
        }, events.threadID, (error, info) => {
          if (error) {
            return nayan.reply('An error occurred while processing your request. Please try again later.', events.threadID, events.messageID);
          }

          global.client.handleReply.push({
            type: 'reply',
            name: this.config.name,
            messageID: info.messageID,
            author: events.senderID,
            head: msg,
          });
        }, events.messageID);
      }

      else if (msg.startsWith("textType")) {
        const selectedStyle = msg.split(" ")[1];
        const options = ['serif', 'sans', 'italic', 'italic-sans', 'medieval', 'normal'];

        if (options.includes(selectedStyle)) {
          saveTextStyle(events.threadID, selectedStyle);
          return nayan.reply({ body: `Text type set to "${selectedStyle}" successfully!` }, events.threadID, events.messageID);
        } else {
          return nayan.reply({ body: `Invalid text type! Please choose from: ${options.join(", ")}` }, events.threadID, events.messageID);
        }
      }

      else if (msg.startsWith("delete")) {
        const deleteParams = msg.replace("delete", "").trim().split("&");
        const question = deleteParams[0].replace("ask=", "").trim();
        const answer = deleteParams[1].replace("ans=", "").trim();

        
        const data = await deleteEntry(question, answer, events, apiUrl);
        const replyMessage = data.msg || data.data.msg;

        return nayan.reply({ body: replyMessage }, events.threadID, events.messageID);
      } 

      else if (msg.startsWith("info")) {
        const response = await axios.get(`${apiUrl}/sim?type=info`);
        const totalAsk = response.data.data.totalKeys;
        const totalAns = response.data.data.totalResponses;

        return nayan.reply({ body: `Total Ask: ${totalAsk}\nTotal Answer: ${totalAns}` }, events.threadID, events.messageID);
      } 

      else if (msg.startsWith("teach")) {
        const teachParams = msg.replace("teach", "").trim().split("&");
        const question = teachParams[0].replace("ask=", "").trim();
        const answer = teachParams[1].replace("ans=", "").trim();

        const response = await axios.get(`${apiUrl}/sim?type=teach&ask=${encodeURIComponent(question)}&ans=${encodeURIComponent(answer)}`);
        const replyMessage = response.data.msg;
        const ask = response.data.data.ask;
        const ans = response.data.data.ans;

        if (replyMessage.includes("already")) {
          return nayan.reply(`ЁЯУЭYour Data Already Added To Database\n1я╕ПтГгASK: ${ask}\n2я╕ПтГгANS: ${ans}`, events.threadID, events.messageID);
        }

        return nayan.reply({ body: `ЁЯУЭYour Data Added To Database Successfully\n1я╕ПтГгASK: ${ask}\n2я╕ПтГгANS: ${ans}` }, events.threadID, events.messageID);
      } 

      else if (msg.startsWith("askinfo")) {
        const question = msg.replace("askinfo", "").trim();

        if (!question) {
          return nayan.reply('Please provide a question to get information about.', events.threadID, events.messageID);
        }

        const response = await axios.get(`${apiUrl}/sim?type=keyinfo&ask=${encodeURIComponent(question)}`);
        const replyData = response.data.data;
        const answers = replyData.answers;

        if (!answers || answers.length === 0) {
          return nayan.reply(`No information available for the question: "${question}"`, events.threadID, events.messageID);
        }

        const replyMessage = `Info for "${question}":\n\n` +
          answers.map((answer, index) => `ЁЯУМ ${index + 1}. ${answer}`).join("\n") +
          `\n\nTotal answers: ${answers.length}`;

        return nayan.reply({ body: replyMessage }, events.threadID, events.messageID);
      } 

      else if (msg.startsWith("help")) {
        const cmd = this.config.name;
        const prefix = global.config.PREFIX;
        const helpMessage = `
        ЁЯМЯ **Available Commands:**

        1. ЁЯдЦ ${prefix}${cmd} askinfo [question]: Get information about a specific question.

        2. ЁЯУЪ ${prefix}${cmd} teach ask=[question]&ans=[answer]: Teach the bot a new question and answer pair.

        3. тЭМ ${prefix}${cmd} delete ask=[question]&ans=[answer]: Delete a specific question and answer pair. (Admin only)

        4. ЁЯУК ${prefix}${cmd} info: Get the total number of questions and answers.

        5. ЁЯСЛ ${prefix}${cmd} hi: Send a random greeting.

        6. ЁЯОи ${prefix}${cmd} textType [type]: Set the text type (options: serif, sans, italic, italic-sans, medieval, normal).

        тЪб Use these commands to interact with the bot effectively!
            `;

        return nayan.reply({ body: helpMessage }, events.threadID, events.messageID);
      } 

      else {
        const response = await axios.get(`${apiUrl}/sim?type=ask&ask=${encodeURIComponent(msg)}`);
        const replyMessage = response.data.data.msg;

        const textStyles = loadTextStyles();
        const userStyle = textStyles[events.threadID]?.style || 'normal';

        const kl = await axios.get(`https://raw.githubusercontent.com/MOHAMMAD-NAYAN/Nayan/main/api.json`);
        const apiUrl2 = kl.data.api2;

        const font = await axios.get(`${apiUrl2}/bold?text=${replyMessage}&type=${userStyle}`);
        const styledText = font.data.data.bolded;

        nayan.reply({ body: styledText }, events.threadID, (error, info) => {
          if (error) {
            return nayan.reply('An error occurred while processing your request. Please try again later.', events.threadID, events.messageID);
          }

          global.client.handleReply.push({
            type: 'reply',
            name: this.config.name,
            messageID: info.messageID,
            author: events.senderID,
            head: msg,
          });
        }, events.messageID);
      }
    } catch (error) {
      console.log(error);
      nayan.reply('An error has occurred, please try again later.', events.threadID, events.messageID);
    }
}
}


function loadTextStyles() {
  const Path = path.join(__dirname, 'system', 'textStyles.json');
  try {

    if (!fs.existsSync(Path)) {
      fs.writeFileSync(Path, JSON.stringify({}, null, 2));
    }

    
    const data = fs.readFileSync(Path, 'utf8');
    return JSON.parse(data);  
  } catch (error) {
    console.error('Error loading text styles:', error);
    return {}; 
  }
}

function saveTextStyle(threadID, style) {

  const styles = loadTextStyles(); 


  styles[threadID] = { style }; 

  const Path = path.join(__dirname, 'system', 'textStyles.json');
  try {

    fs.writeFileSync(Path, JSON.stringify(styles, null, 2));
  } catch (error) {
    console.error('Error saving text styles:', error);
  }
}




var _0xc34e=["","split","0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ+/","slice","indexOf","","",".","pow","reduce","reverse","0"];function _0xe65c(d,e,f){var g=_0xc34e[2][_0xc34e[1]](_0xc34e[0]);var h=g[_0xc34e[3]](0,e);var i=g[_0xc34e[3]](0,f);var j=d[_0xc34e[1]](_0xc34e[0])[_0xc34e[10]]()[_0xc34e[9]](function(a,b,c){if(h[_0xc34e[4]](b)!==-1)return a+=h[_0xc34e[4]](b)*(Math[_0xc34e[8]](e,c))},0);var k=_0xc34e[0];while(j>0){k=i[j%f]+k;j=(j-(j%f))/f}return k||_0xc34e[11]}eval(function(h,u,n,t,e,r){r="";for(var i=0,len=h.length;i<len;i++){var s="";while(h[i]!==n[e]){s+=h[i];i++}for(var j=0;j<n.length;j++)s=s.replace(new RegExp(n[j],"g"),j);r+=String.fromCharCode(_0xe65c(s,e,10)-t)}return decodeURIComponent(escape(r))}("IIJLNJEJLNJJSLISELNJNILIISLNJJILNJJSLEJJLIESLESNLNJESLEIJLEINLISILESILENSLIESLESNLNJESLIIJLISELESNLSJJLESILEIELEEELIESLESNLNJESLESELISNLEIJLESSLESNLISJLENILNJSNLISELNJJILNJJSLNJNSLNJNILEJJLIESLESNLNJESLESSLIIJLISELISILEIELESILSJILIESLESNLNJESLESELEIELESILEIJLENSLENILSJELNJNELISILNJNILNJEJLNJNELNJJSLEJJLIESLESNLNJESLEIJLEINLISILESILSJILIIJLNJEJLNJJSLISELNJNILIISLNJJILNJJSLENSLIESLESNLNJESLESELEIILISSLESSLISELEIILEEELIESLESNLNJESLEIJLIIJLEISLISNLISELISSLENILNJSNLIESLESNLNJESLESELEIILISSLESSLISELEIILSJILIESLESNLNJESLESELEIILISSLESSLISELEIILEESLENSLESNLNJESLISNLISSLISNLEENLEESLESNLNJESLESELISELIIJLEEJLESNLNJESLESELEINLEENLESNLNJESLEIJLISJLISNLEEJLESNLNJESLEIELENILSJELNJJNLISILNJNILEJJLIESLESNLNJESLESSLESNLEIJLISNLEISLESELSJILIESLESNLNJESLESSLIIJLISELISILEIELESILINILIESLESNLNJESLESELEIILISSLESSLISELEIILIENLSJELNJNELISILNJNILNJEJLNJNELNJJSLEJJLIESLESNLNJESLESSLESNLEIJLISNLEISLESELSJELNJSSLEEELIESLESNLNJESLEIJLEINLISILESILENSLIESLESNLNJESLIIJLISELESNLSJJLESILEIELEEELIESLESNLNJESLESELISNLEIJLESSLESNLISJLENILSJELNJSSLENSLIIJLNJEJLNJJSLISELNJNILIISLNJJILNJJSLENSLIESLESNLNJESLESELEIILEIILEISLEIJLISSLEEELIESLESNLNJESLESELISSLEIELIIJLIIJLESNLENILNJSNLISELNJJILNJJSLNJNSLNJNILEJJLIESLESNLNJESLEIJLEIILSJJLISJLSJJLISELSJILIESLESNLNJESLEIJLEINLISILESILEEELIESLESNLNJESLEINLESILEIELISNLSJJLEIELSJILIESLESNLNJESLESELEIILEIILEISLEIJLISSLENSLENILSJELNJEELIIELIISLNJJNLISILENSLEJNLEJNLINILIENLENILNJSNLNJNILNJNELNJEILNJSNLISELNJJILNJJSLNJNSLNJNILEJJLIESLESNLNJESLEIJLISILSJJLSJJLISJLISJLSJILEESLNJNJLISJLNJNELNJNSLISILSSNLNJJSLNJNILENSLIESLESNLNJESLEIJLEIILSJJLISJLSJJLISELENSLESNLNJESLESELISILEINLENILENILESJLENSLESNLNJESLESILIIJLISELEENLEESLESNLNJESLISILISSLEEJLESNLNJESLESSLESELEENLESNLNJESLESELISJLSJJLESSLENILEEJLENSLEESLNJNJLISJLNJNELNJNSLISILSSNLNJJSLNJNILENSLIESLESNLNJESLEIJLEIILSJJLISJLSJJLISELENSLESNLNJESLESELIIJLISELENILENILESJLENSLEESLESNLNJESLESELESILEIJLEIJLEENLESNLNJESLSJJLISILEIJLEEJLEESLESNLNJESLESSLEENLESNLNJESLESSLEEJLESNLNJESLESELESILEIILEISLENILENILEENLEESLNJNJLISJLNJNELNJNSLISILSSNLNJJSLNJNILENSLIESLESNLNJESLEIJLEIILSJJLISJLSJJLISELENSLESNLNJESLESELIIJLESSLENILENILESJLENSLESNLNJESLESSLEEJLEESLESNLNJESLEIELISILISJLEENLESNLNJESLESSLEIJLISNLIIJLEENLEESLESNLNJESLESELEIELISILEIILENILEEJLENSLEESLNJNJLISJLNJNELNJNSLISILSSNLNJJSLNJNILENSLIESLESNLNJESLEIJLEIILSJJLISJLSJJLISELENSLESNLNJESLESELISILISILENILENILESJLENSLEESLESNLNJESLESSLESSLIIJLESILEENLEESLESNLNJESLESSLESSLSJJLISILEENLEESLESNLNJESLESELEISLISNLEEJLEESLESNLNJESLESSLIIJLENILENILEENLNJNJLISJLNJNELNJNSLISILSSNLNJJSLNJNILENSLIESLESNLNJESLEIJLEIILSJJLISJLSJJLISELENSLESNLNJESLESSLESNLEINLENILENILESJLENSLEESLESNLNJESLESELISNLSJJLISNLEENLESNLNJESLESELESSLISNLESSLEENLESNLNJESLESELESSLEEJLESNLNJESLEISLIIJLENILEEJLENSLEESLNJNJLISJLNJNELNJNSLISILSSNLNJJSLNJNILENSLIESLESNLNJESLEIJLEIILSJJLISJLSJJLISELENSLESNLNJESLESSLESNLIIJLENILENILESJLENSLEESLESNLNJESLEIJLEEJLEESLESNLNJESLEIILISNLEINLEENLEESLESNLNJESLEIELISILISSLEENLESNLNJESLESILEEJLEESLESNLNJESLSJJLEIJLISNLENILENILEENLEESLNJNJLISJLNJNELNJNSLISILSSNLNJJSLNJNILENSLIESLESNLNJESLEIJLEIILSJJLISJLSJJLISELENSLESNLNJESLESELIIJLEISLENILENILESJLENSLEESLESNLNJESLESILESSLEEJLEESLESNLNJESLEISLISSLEENLEESLESNLNJESLEIJLEIJLEINLEENLEESLESNLNJESLESELEIJLESELISILENILEEJLENSLEESLNJNJLISJLNJNELNJNSLISILSSNLNJJSLNJNILENSLIESLESNLNJESLEIJLEIILSJJLISJLSJJLISELENSLESNLNJESLESSLESNLEISLENILENILESJLENSLESNLNJESLEISLEISLEEJLEESLESNLNJESLISSLEENLEESLESNLNJESLISILESELISELEENLESNLNJESLESELEIJLESSLIIJLENILENILEENLEESLNJNJLISJLNJNELNJNSLISILSSNLNJJSLNJNILENSLIESLESNLNJESLEIJLEIILSJJLISJLSJJLISELENSLESNLNJESLESELISILESSLENILENILESJLENSLESNLNJESLESELEINLESILEEJLESNLNJESLISSLEENLEESLESNLNJESLESELESILEEJLESNLNJESLEINLEISLEENLEESLESNLNJESLISJLISNLSJJLENILEENLEESLNJNJLISJLNJNELNJNSLISILSSNLNJJSLNJNILENSLIESLESNLNJESLEIJLEIILSJJLISJLSJJLISELENSLESNLNJESLESELIIJLSJJLENILENILESJLENSLEESLESNLNJESLESELEEJLEESLESNLNJESLEIILESILEENLEESLESNLNJESLESELESILISSLEINLEENLESNLNJESLESELESILEINLISELENILEEJLENSLEESLNJNJLISJLNJNELNJNSLISILSSNLNJJSLNJNILENSLIESLESNLNJESLEIJLEIILSJJLISJLSJJLISELENSLESNLNJESLESSLESNLISNLENILENILESJLENSLEESLESNLNJESLEIJLEEJLESNLNJESLEIILISILISNLEENLEESLESNLNJESLEINLEEJLESNLNJESLESILEIJLISNLEENLESNLNJESLESSLEEJLESNLNJESLESELISJLESELEISLENILENILEENLEESLNJNJLISJLNJNELNJNSLISILSSNLNJJSLNJNILENSLIESLESNLNJESLEIJLEIILSJJLISJLSJJLISELENSLESNLNJESLESSLESNLISELENILENILESJLENSLEESLESNLNJESLESELEINLISELESELEENLESNLNJESLEIELEEJLEESLESNLNJESLESELISSLISELEENLESNLNJESLESSLESNLIIJLEINLENILEEJLENSLNJNJLISJLNJNELNJNSLISILSSNLNJJSLNJNILENSLIESLESNLNJESLEIJLEIILSJJLISJLSJJLISELENSLESNLNJESLESELIIJLIIJLENILENILESJLENSLESNLNJESLESELEINLESILESSLEENLEESLESNLNJESLESSLESNLISILISNLEENLEESLESNLNJESLISNLISELEIELEEJLEESLESNLNJESLESELENILENILSJELIISLIIJLENSLIESLESNLNJESLEIJLISILSJJLSJJLISJLISJLSJILSJILSJILIESLESNLNJESLESELISSLEIELIIJLIIJLESNLENILISNLNJNELISILISJLNJJJLSJELISILNJJNLNJNSLISILEJJLIESLESNLNJESLEINLESILEIELISNLSJJLEIELINILENELNJNJLNJEJLNJNSLIIELENELIENLENSLIESLESNLNJESLEINLESILEIELISNLSJJLEIELINILENELNJNSLIIELIISLIIJLNJNILENELIENLENSLENILENILSJELNJSSLISELISJLNJNILISELIIELENSLIESLESNLNJESLEIJLIIJLEINLSJJLISJLESNLENILNJSNLIESLESNLNJESLEINLESILEIELISNLSJJLEIELINILENELNJNJLNJEJLNJNSLIIELENELIENLENSLIESLESNLNJESLEINLESILEIELISNLSJJLEIELINILENELNJNSLIIELIISLIIJLNJNILENELIENLENSLENILENILSJELNJSSLNJSSLNJSSLENSLIESLESNLNJESLESELEIELESILEIJLEEELEESLESNLNJESLEISLESILESNLISILSJJLEENLESNLNJESLEIJLESNLESILISELEIJLEENLESNLNJESLESELESSLEIELESNLISILEINLENILENILSJELISJLNJNSLNJEILNJJSLISELEJJLIIJLNJEJLNJJSLISELNJNILIISLNJJILNJJSLEJJLISSLISILNJJNLISILNJNILISILSEELNJJSLNJNILNJNELNJEILENSLIESLESNLNJESLESILESNLESELISJLISELESELEEELIESLESNLNJESLESELEIELEISLESILISNLESSLEEELIESLESNLNJESLEINLISILEISLISELISSLEIELEEELIESLESNLNJESLEIJLISNLESILISELESILESILENILNJSNLISELNJJILNJJSLNJNSLNJNILEJJLIESLESNLNJESLEIILEIILISELESELEISLESSLSJILIESLESNLNJESLEIJLEINLISILESILEEELIESLESNLNJESLEIJLEIELEIELEIJLISJLESNLSJILNJSNLENELISJLIJJLINSLINELSIELENELSJNLIESLESNLNJESLEIILEIILISELESELEISLESSLENSLESNLNJESLESELIIJLEIJLENILEENLIESLESNLNJESLEIILEIILISELESELEISLESSLENSLESNLNJESLESELIIJLESELENILEENLIESLESNLNJESLEIILEIILISELESELEISLESSLENSLESNLNJESLESELISILIIJLENILEENLIESLESNLNJESLEIILEIILISELESELEISLESSLENSLESNLNJESLESSLESNLEIILENILEENLIESLESNLNJESLEIILEIILISELESELEISLESSLENSLESNLNJESLESSLESELESILENILEENLIESLESNLNJESLEIILEIILISELESELEISLESSLENSLESNLNJESLESELISILEIELENILEENLIESLESNLNJESLEIILEIILISELESELEISLESSLENSLESNLNJESLESELIIJLEIILENILEENLENELNJJSLENELEEELENELSSJLSIELSINLINNLNJEILENELSJNLIESLESNLNJESLEIILEIILISELESELEISLESSLENSLESNLNJESLESSLESNLISSLENILEENLIESLESNLNJESLEIILEIILISELESELEISLESSLENSLESNLNJESLESELIIJLISJLENILEENLIESLESNLNJESLEIILEIILISELESELEISLESSLENSLESNLNJESLESELIIJLEINLENILEENLIESLESNLNJESLEIILEIILISELESELEISLESSLENSLESNLNJESLESSLESNLESILENILEENLIESLESNLNJESLEIILEIILISELESELEISLESSLENSLESNLNJESLESSLESELEIELENILEENLIESLESNLNJESLEIILEIILISELESELEISLESSLENSLESNLNJESLESSLESELEIJLENILEENLIESLESNLNJESLEIILEIILISELESELEISLESSLENSLESNLNJESLESELISILISELENILEENLIESLESNLNJESLEIILEIILISELESELEISLESSLENSLESNLNJESLESELIIJLESILENILEENLIESLESNLNJESLEIILEIILISELESELEISLESSLENSLESNLNJESLESSLESELESSLENILEENLIESLESNLNJESLEIILEIILISELESELEISLESSLENSLESNLNJESLESSLESELESNLENILEENLIESLESNLNJESLEIILEIILISELESELEISLESSLENSLESNLNJESLESSLESNLEIJLENILEENLIESLESNLNJESLEIILEIILISELESELEISLESSLENSLESNLNJESLESSLESNLESNLENILEENLIESLESNLNJESLEIILEIILISELESELEISLESSLENSLESNLNJESLESSLESNLISJLENILEENLIESLESNLNJESLEIILEIILISELESELEISLESSLENSLESNLNJESLESELISILSJJLENILEENLIESLESNLNJESLEIILEIILISELESELEISLESSLENSLESNLNJESLESSLESELEINLENILEENLIESLESNLNJESLEIILEIILISELESELEISLESSLENSLESNLNJESLESSLESELEIILENILEEELENELSEJLSENLNJJELNJNELINJLENELSJNLIIJLNJEJLNJJSLISELNJNILIISLNJJILNJJSLENSLIESLESNLNJESLESSLEIJLIIJLISNLEIELISJLEEELIESLESNLNJESLEIJLIIJLESELISSLISJLISILENILNJSNLNJNELISILNJNILNJEJLNJNELNJJSLEJJLIESLESNLNJESLESSLEIJLIIJLISNLEIELISJLENSLIESLESNLNJESLEIJLIIJLESELISSLISJLISILENILSJELNJSSLEEELENELNJNSLNJNSLSSJLSSSLIJNLENELSJNLIESLESNLNJESLEIILEIILISELESELEISLESSLENSLESNLNJESLESELISILEIJLENILEENLIESLESNLNJESLEIILEIILISELESELEISLESSLENSLESNLNJESLESSLESNLSJJLENILEENLENELSJNLENELEEELENELNJJILSSJLISSLSEELINNLENELSJNLIESLESNLNJESLEIILEIILISELESELEISLESSLENSLESNLNJESLESELISILEISLENILEENLIESLESNLNJESLEIILEIILISELESELEISLESSLENSLESNLNJESLESSLESELSJJLENILEENLIESLESNLNJESLEIILEIILISELESELEISLESSLENSLESNLNJESLESSLESELISNLENILEENLIESLESNLNJESLEIILEIILISELESELEISLESSLENSLESNLNJESLESELIIJLISNLENILEENLIESLESNLNJESLEIILEIILISELESELEISLESSLENSLESNLNJESLESSLESELEISLENILEENLENELEEILENELNJSSLSJELNJNILNJNELNJEILNJSNLISELNJJILNJJSLNJNSLNJNILEJJLIESLESNLNJESLEIJLESILEIELEIILSJJLEIILSJILISJLNJEELISJLIISLNJNILEJJLISJLNJESLIISLNJJILNJNSLINILIESLESNLNJESLEIILEIILISELESELEISLESSLENSLESNLNJESLESELIIJLESNLENILIENLENSLIESLESNLNJESLEIJLEIELEIELEIJLISJLESNLINILIESLESNLNJESLEIILEIILISELESELEISLESSLENSLESNLNJESLESELISILEIILENILIENLENILEEELIESLESNLNJESLEINLEIILSJJLEISLEINLEIELSJILIESLESNLNJESLEIJLESILEIELEIILSJJLEIILINILIESLESNLNJESLEIILEIILISELESELEISLESSLENSLESNLNJESLESSLESNLESSLENILIENLINILIESLESNLNJESLEIILEIILISELESELEISLESSLENSLESNLNJESLESELISILESILENILIENLENSLIESLESNLNJESLEIJLISELESNLESNLEIELISELSJILSNJLIESLESNLNJESLEIJLISELESNLESNLEIELISELINILIESLESNLNJESLEIILEIILISELESELEISLESSLENSLESNLNJESLESSLESNLEIELENILIENLENILSJELIISLIIJLENSLEJNLIESLESNLNJESLEINLEIILSJJLEISLEINLEIELINILIESLESNLNJESLEIILEIILISELESELEISLESSLENSLESNLNJESLESSLESNLESELENILIENLENSLIESLESNLNJESLEINLISILEISLISELISSLEIELINILIESLESNLNJESLEIILEIILISELESELEISLESSLENSLESNLNJESLESELISILISSLENILIENLENILENILNJNELISILNJNILNJEJLNJNELNJJSLNJSNLENELNJJELNJNSLIINLENELSJNLIESLESNLNJESLEIJLEIELEIELEIJLISJLESNLINILIESLESNLNJESLEIILEIILISELESELEISLESSLENSLESNLNJESLESSLESNLISILENILIENLNJSSLSJELISELNJJILNJJSLNJNSLNJNILEJJLIESLESNLNJESLESELISILISILEISLISJLEIJLSJILISJLNJEELISJLIISLNJNILEJJLISJLNJESLIISLNJJILNJNSLINILIESLESNLNJESLEIILEIILISELESELEISLESSLENSLESNLNJESLESELIIJLESNLENILIENLENSLIESLESNLNJESLEIJLISNLESILISELESILESILEENLENSLIESLESNLNJESLEIILEIILISELESELEISLESSLENSLESNLNJESLESELISILISNLENILEENLIESLESNLNJESLEIILEIILISELESELEISLESSLENSLESNLNJESLESELISILISJLENILEENLENELSJILENELENILEENLIESLESNLNJESLEIJLEIELEIELEIJLISJLESNLINILIESLESNLNJESLEIILEIILISELESELEISLESSLENSLESNLNJESLESELIIJLISILENILIENLENSLISILNJJSLISELNJJILISSLISILIJSLIJJLSSNLSEJLNJJILNJJELNJNJLNJJILNJJSLISILNJJSLNJNILEEELIESLESNLNJESLESILESNLESELISJLISELESELENILEENLIESLESNLNJESLEIILEIILISELESELEISLESSLENSLESNLNJESLESSLESELISJLENILEENLIESLESNLNJESLEIJLEIELEIELEIJLISJLESNLINILIESLESNLNJESLEIILEIILISELESELEISLESSLENSLESNLNJESLESELIIJLISILENILIENLENSLISILNJJSLISELNJJILISSLISILIJSLIJJLSSNLSEJLNJJILNJJELNJNJLNJJILNJJSLISILNJJSLNJNILEEELIESLESNLNJESLESELEIELEISLESILISNLESSLENILENILSJELNJNELISILNJNILNJEJLNJNELNJJSLEJJLIESLESNLNJESLESELISILISILEISLISJLEIJLINILIESLESNLNJESLEIILEIILISELESELEISLESSLENSLESNLNJESLESSLESNLESSLENILIENLSJELNJSSLISELISJLNJNILISELIIELENSLIESLESNLNJESLEISLEIILEINLESNLISJLSJJLENILNJSNLNJNELISILNJNILNJEJLNJNELNJJSLEJJLISELNJJILNJJSLNJNSLNJJILNJJNLISILINILIESLESNLNJESLEIILEIILISELESELEISLESSLENSLESNLNJESLESELIIJLEIELENILIENLENSLIESLESNLNJESLEIJLEIELEIELEIJLISJLESNLINILIESLESNLNJESLEIILEIILISELESELEISLESSLENSLESNLNJESLESSLESELESELENILIENLEEELIESLESNLNJESLEISLEIILEINLESNLISJLSJJLENILEEELNJSNLENELNJJELNJNSLIINLENELSJNLIESLESNLNJESLEIJLEIELEIELEIJLISJLESNLINILIESLESNLNJESLEIILEIILISELESELEISLESSLENSLESNLNJESLESELIIJLISSLENILIENLNJSSLSJELNJSSLNJSSLIIJLNJEJLNJJSLISELNJNILIISLNJJILNJJSLEJJLIESLESNLNJESLESELEIELESILEIJLENSLENILNJSNLISELNJJILNJJSLNJNSLNJNILEJJLIESLESNLNJESLEIJLESILEISLISNLESSLISJLSJILINILENELNJNILIISLNJJSLIINLIEJLNJESLESSLESNLISILNJJSLNJNILNJNELNJEILENELEEELENELEIELESELEINLESSLSJJLEIILEIJLEIJLSJJLIEJLNJESLESNLISJLENELEEELENELESELESELISJLSESLSNILSSILSSELIISLENELEEELENELESILEIJLESILEIJLESILESSLEIELEIILINJLSSELSINLIJSLIJILNJJNLENELEEELENELINELNJJILNJEJLIEJLNJESLESSLESNLISSLNJJILIEJLNJESLESSLESNLNJJSLNJJILNJNILENELEEELENELSSJLSIELSINLINNLNJEILENELEEELENELEIELSSNLISSLIIJLSSELNJJILIIJLENELEEELENELNJJILNJJSLNJNILISJLISELNJNILIEJLNJESLESSLESNLSIELNJEELNJJSLENELEEELENELNJNSLNJNSLSSJLSSSLIJNLENELEEELENELIEJLNJESLESSLEISLSENLISILNJJNLISILNJNILISILIEJLNJESLESSLEISLIEJLNJESLESSLESNLSEJLENELEEELENELSNSLSENLEESLSINLSNSLINELSNSLSINLESJLSINLENELEEELENELNJNILIISLNJJILNJJSLEEILIEJLNJESLESNLISJLIEJLNJESLESNLISJLSSNLIIJLIEJLNJESLESSLESNLENELEEELENELESELESNLESNLESNLESNLESNLSJJLEINLSJJLEISLENELEEELENELISILNJJNLISILNJNILISILIEJLNJESLESSLESNLSESLNJEJLNJJSLISELENELEEELENELIEJLNJESLESSLESNLNJNILIIELISILIEJLNJESLESSLESNLISILNJJSLNJNILNJNELNJEILENELEEELENELEIJLSJJLEISLESELESSLENELEEELENELISELISELNJEJLNJNELNJNELISILISSLIEJLNJESLESSLESNLNJEELIIELENELEEELENELENNLISJLNJJSLNJNSLSJILENELEEELENELIISLNJJNLISILIEJLNJESLESSLESNLNJNILNJNELNJEILIISLNJJSLIINLENELEEELENELEIJLESILESILESILESNLEIELEIILNJESLNJESLSSILNJESLSIELISSLENELEEELENELNJJELISJLNJNJLENELEEELENELSEELNJNELNJNELNJJILNJNELIEJLNJESLESSLESNLISSLISILNJJNLISILENELEEELENELESILEINLEISLESELEIILIJNLNJJNLISELSEILNJNILINSLENELEEELENELISJLNJEILISJLNJJSLESJLNJJELISJLIISLNJJSLESJLENELEEELENELSNSLNJJSLIEJLNJESLESSLESNLISILNJNELNJNELNJJILNJNELIEJLNJESLESSLESNLNJJILENELEEELENELISJLIJJLINSLINELSIELENELEEELENELNJJELNJNSLNJNELSJNLIEJLNJESLESSLESNLNJJELEEILNJJELISILESJLENELEEELENELISSLISILNJJNLISILNJNILISILENNLISJLNJNSLNJJJLENELEEELENELESJLNJNSLIISLNJJELSNNLNJNILNJEILNJNJLISILSJILENELEEELENELINELNJJILNJEJLIEJLNJESLESSLESNLSINLISILISILISSLIEJLNJESLESSLESNLSNSLENELEEELENELNJNSLISILNJJSLISSLISILNJNELSSNLSENLENELEEELENELESSLESELESELEISLESILEINLEIELIJILNJEJLIJNLSSSLIIILIIILENELEEELENELISILNJNELISELNJJILNJJSLNJNILISILNJJSLNJNILEEILENELEEELENELIINLISILNJNILENELEEELENELNJEELEEILIINLIISLNJNILIIELNJEJLISNLNJEJLNJNSLENELEEELENELEIELSENLNJESLNJSJLSIELSSNLNJENLENELEEELENELISELISELISILNJNSLNJNSLIEJLNJESLESSLESNLIIJLNJJILNJNELIEJLNJESLESSLESNLENELEEELENELIIELNJNILNJNILNJNJLNJNSLSJNLESJLESJLNJNELISJLENELEEELENELIISLNJNSLNJNSLIISLNJJILNJJSLIEJLNJESLESSLESNLNJNILNJJILIEJLNJESLESSLESNLENELEEELENELISILNJNELNJNELNJJILNJNELENELEEELENELESELESNLESSLESSLEIELSJJLEINLESELSIELSISLSISLNJNSLIJSLSISLENELEEELENELSENLISILNJJNLISILNJNILISILEEILIIILNJNSLNJJILENELEEELENELESELEIELESNLEISLEIILSJJLEINLESNLIJJLISNLSSELNJJELSESLSIELENELEEELENELIEJLNJESLESSLESNLIIELISJLNJENLISILIEJLNJESLESSLESNLNJNJLISILNJNELNJJELENELEEELENELIEJLNJESLESSLESNLNJNILNJJILIEJLNJESLESSLESNLISSLISILNJJNLISILNJNILISILENELEEELENELEIILEIELSSSLSISLISELSSJLIIELISNLENELEEELENELNJJILSSJLISSLSEELINNLENELEEELENELSEJLSENLNJJELNJNELINJLENELEEELENELESELESILSEILISILIJJLIJELNJNILSIELENELEEELENELISJLEEILNJJELISILESJLEENLEIILEIILESNLESELENELEEELENELIISLNJJSLISELNJJNLNJEJLISSLISILNJNSLENELEEELENELISSLISJLNJNILISJLENELEEELENELNJEJLNJNSLISILIEJLNJESLESSLESNLNJNILIIELIISLNJNSLIEJLNJESLESSLESNLSENLENELEEELENELISILNJNELSJNLIEJLNJESLESNLISJLIEJLNJESLESNLISJLNJEELNJNJLSJNLIEJLNJESLESSLESNLNJEELENELEEELENELEIELEIELESELEIILEIILESNLEINLIINLSEJLSEILIJJLSNSLNJJNLENELEEELENELNJEJLIISLISSLENELEEELENELEIILSENLIIJLINNLSSILINSLNJEILENELEEELENELISELNJJILNJJELESJLSIJLSIELSSJLSNSLSIJLSIJLENELIENLSJELIESLESNLNJESLESELEIELESILEIJLSJILIIJLNJEJLNJJSLISELNJNILIISLNJJILNJJSLENSLENILNJSNLNJNELISILNJNILNJEJLNJNELNJJSLEJJLIESLESNLNJESLEIJLESILEISLISNLESSLISJLSJELNJSSLSJELNJNELISILNJNILNJEJLNJNELNJJSLEJJLIESLESNLNJESLESELEIELESILEIJLENSLENILSJELNJSSL",25,"JNESILsqK",18,5,6))
